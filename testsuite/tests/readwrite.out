Dump	Read
Read	.init.scripts.exists "nfsserver" true
Read	.init.scripts.runlevel "nfsserver" $["nfslock":$["start":["3", "5"], "stop":["3", "5"]], "nfsserver":$["start":["3", "5"], "stop":["3", "5"]], "rpcbind":$["start":["3", "5"], "stop":["3", "5"]]]
Read	.etc.exports [$["allowed":["proj*.local.domain(rw)"], "mountpoint":"/projects"], $["allowed":["*.local.domain(ro)", "@trusted(rw)"], "mountpoint":"/usr"], $["allowed":["(ro,insecure,all_squash)"], "mountpoint":"/pub"]]
Read	.init.scripts.exists "nfslock" true
Read	.sysconfig.nfs.NFS4_SUPPORT nil
Read	.sysconfig.nfs.NFS_SECURITY_GSS nil
Read	.init.scripts.exists "SuSEfirewall2_init" true
Read	.init.scripts.runlevel "SuSEfirewall2_init" $["nfslock":$["start":["3", "5"], "stop":["3", "5"]], "nfsserver":$["start":["3", "5"], "stop":["3", "5"]], "rpcbind":$["start":["3", "5"], "stop":["3", "5"]]]
Read	.init.scripts.exists "SuSEfirewall2_init" true
Execute	.target.bash "/etc/init.d/SuSEfirewall2_init status" $["TERM":"raw"] 0
Return	true
Dump	Write OK
Read	.target.dir "/projects" nil
Execute	.target.mkdir "/projects" true
Read	.target.dir "/usr" nil
Execute	.target.mkdir "/usr" true
Read	.target.dir "/pub" nil
Execute	.target.mkdir "/pub" true
Write	.etc.exports [$["allowed":["proj*.local.domain(rw)"], "mountpoint":"/projects"], $["allowed":["*.local.domain(ro)", "@trusted(rw)"], "mountpoint":"/usr"], $["allowed":["(ro,insecure,all_squash)"], "mountpoint":"/pub"]] true
Write	.sysconfig.nfs.NFS4_SUPPORT "no" true
Write	.sysconfig.nfs.NFS_SECURITY_GSS "no" true
Write	.sysconfig.nfs nil true
Read	.init.scripts.exists "rpcbind" true
Read	.init.scripts.exists "rpcbind" true
Read	.init.scripts.exists "rpcbind" true
Read	.init.scripts.exists "rpcbind" true
Read	.init.scripts.runlevel "rpcbind" $["nfslock":$["start":["3", "5"], "stop":["3", "5"]], "nfsserver":$["start":["3", "5"], "stop":["3", "5"]], "rpcbind":$["start":["3", "5"], "stop":["3", "5"]]]
Read	.init.scripts.comment "rpcbind" $["nfslock":$[], "nfsserver":$[], "rpcbind":$[]]
Read	.init.scripts.exists "nfslock" true
Read	.init.scripts.exists "nfslock" true
Read	.init.scripts.exists "nfslock" true
Read	.init.scripts.runlevel "nfslock" $["nfslock":$["start":["3", "5"], "stop":["3", "5"]], "nfsserver":$["start":["3", "5"], "stop":["3", "5"]], "rpcbind":$["start":["3", "5"], "stop":["3", "5"]]]
Read	.init.scripts.comment "nfslock" $["nfslock":$[], "nfsserver":$[], "rpcbind":$[]]
Read	.init.scripts.exists "nfsserver" true
Read	.init.scripts.exists "nfsserver" true
Read	.init.scripts.exists "nfsserver" true
Read	.init.scripts.runlevel "nfsserver" $["nfslock":$["start":["3", "5"], "stop":["3", "5"]], "nfsserver":$["start":["3", "5"], "stop":["3", "5"]], "rpcbind":$["start":["3", "5"], "stop":["3", "5"]]]
Read	.init.scripts.comment "nfsserver" $["nfslock":$[], "nfsserver":$[], "rpcbind":$[]]
Read	.init.scripts.exists "idmapd" true
Execute	.target.bash "/etc/init.d/idmapd status" $["TERM":"raw"] 0
Read	.init.scripts.exists "svcgssd" true
Execute	.target.bash "/etc/init.d/svcgssd status" $["TERM":"raw"] 0
Read	.init.scripts.exists "svcgssd" true
Execute	.target.bash "/etc/init.d/svcgssd stop" $["TERM":"raw"] 0
Read	.init.scripts.exists "rpcbind" true
Execute	.target.bash "/etc/init.d/rpcbind status" $["TERM":"raw"] 0
Read	.init.scripts.exists "nfsserver" true
Execute	.target.bash "/etc/init.d/nfsserver stop" $["TERM":"raw"] 0
Read	.init.scripts.exists "nfslock" true
Execute	.target.bash "/etc/init.d/nfslock restart" $["TERM":"raw"] 0
Read	.init.scripts.exists "nfsserver" true
Execute	.target.bash "/etc/init.d/nfsserver start" $["TERM":"raw"] 0
Read	.init.scripts.exists "nfsserver" true
Execute	.target.bash "/etc/init.d/nfsserver status" $["TERM":"raw"] 0
Read	.init.scripts.exists "SuSEfirewall2_init" true
Execute	.target.bash "/etc/init.d/SuSEfirewall2_init status" $["TERM":"raw"] 0
Return	true
Dump	Write KO
Read	.target.dir "/projects" nil
Execute	.target.mkdir "/projects" true
Read	.target.dir "/usr" nil
Execute	.target.mkdir "/usr" true
Read	.target.dir "/pub" nil
Execute	.target.mkdir "/pub" true
Write	.etc.exports [$["allowed":["proj*.local.domain(rw)"], "mountpoint":"/projects"], $["allowed":["*.local.domain(ro)", "@trusted(rw)"], "mountpoint":"/usr"], $["allowed":["(ro,insecure,all_squash)"], "mountpoint":"/pub"]] false
Log	Unable to write to /etc/exports.
Return	false
