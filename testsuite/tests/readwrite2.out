Dump	
Dump	Read  - services are running
Dump	
Read	.init.scripts.exists "nfsserver" true
Read	.init.scripts.runlevel "nfsserver" $["nfsserver":$["start":["3", "5"], "stop":["3", "5"]], "portmap":$["start":["3", "5"], "stop":["3", "5"]]]
Read	.etc.exports [$["allowed":["proj*.local.domain(rw)"], "mountpoint":"/projects"], $["allowed":["*.local.domain(ro)", "@trusted(rw)"], "mountpoint":"/usr"], $["allowed":["(ro,insecure,all_squash)"], "mountpoint":"/pub"]]
Read	.init.scripts.exists "nfslock" true
Read	.init.scripts.exists "SuSEfirewall2_init" true
Read	.init.scripts.runlevel "SuSEfirewall2_init" $["nfsserver":$["start":["3", "5"], "stop":["3", "5"]], "portmap":$["start":["3", "5"], "stop":["3", "5"]]]
Read	.init.scripts.exists "SuSEfirewall2_init" true
Execute	.target.bash "/etc/init.d/SuSEfirewall2_init status" $["TERM":"raw"] 0
Return	true
Dump	
Dump	Write - services will be stopped
Dump	
Read	.target.dir "/projects" nil
Execute	.target.mkdir "/projects" true
Read	.target.dir "/usr" nil
Execute	.target.mkdir "/usr" true
Read	.target.dir "/pub" nil
Execute	.target.mkdir "/pub" true
Write	.etc.exports [$["allowed":["proj*.local.domain(rw)"], "mountpoint":"/projects"], $["allowed":["*.local.domain(ro)", "@trusted(rw)"], "mountpoint":"/usr"], $["allowed":["(ro,insecure,all_squash)"], "mountpoint":"/pub"]] true
Read	.init.scripts.exists "nfsserver" true
Execute	.target.bash "/etc/init.d/nfsserver stop" $["TERM":"raw"] 0
Read	.init.scripts.exists "nfsserver" true
Read	.init.scripts.exists "nfsserver" true
Read	.init.scripts.exists "nfsserver" true
Read	.init.scripts.runlevel "nfsserver" $["nfsserver":$["start":["3", "5"], "stop":["3", "5"]], "portmap":$["start":["3", "5"], "stop":["3", "5"]]]
Read	.init.scripts.comment "nfsserver" $["nfsserver":$[], "portmap":$[]]
Execute	.target.bash_output "/sbin/insserv -r /etc/init.d/nfsserver" $["exit":0, "stderr":"", "stdout":""]
Read	.init.scripts.exists "nfslock" true
Execute	.target.bash "/etc/init.d/nfslock stop" $["TERM":"raw"] 0
Read	.init.scripts.exists "nfslock" true
Read	.init.scripts.exists "nfslock" true
Read	.init.scripts.exists "nfslock" true
Read	.init.scripts.runlevel "nfslock" $["nfsserver":$["start":["3", "5"], "stop":["3", "5"]], "portmap":$["start":["3", "5"], "stop":["3", "5"]]]
Read	.init.scripts.comment "nfslock" $["nfsserver":$[], "portmap":$[]]
Read	.init.scripts.exists "SuSEfirewall2_init" true
Execute	.target.bash "/etc/init.d/SuSEfirewall2_init status" $["TERM":"raw"] 0
Return	true
Dump	
Dump	Read  - services are running
Dump	
Read	.init.scripts.exists "nfsserver" true
Read	.init.scripts.runlevel "nfsserver" $["nfsserver":$["start":["3", "5"], "stop":["3", "5"]], "portmap":$["start":["3", "5"], "stop":["3", "5"]]]
Read	.etc.exports [$["allowed":["proj*.local.domain(rw)"], "mountpoint":"/projects"], $["allowed":["*.local.domain(ro)", "@trusted(rw)"], "mountpoint":"/usr"], $["allowed":["(ro,insecure,all_squash)"], "mountpoint":"/pub"]]
Read	.init.scripts.exists "nfslock" true
Read	.init.scripts.exists "SuSEfirewall2_init" true
Read	.init.scripts.runlevel "SuSEfirewall2_init" $["nfsserver":$["start":["3", "5"], "stop":["3", "5"]], "portmap":$["start":["3", "5"], "stop":["3", "5"]]]
Read	.init.scripts.exists "SuSEfirewall2_init" true
Execute	.target.bash "/etc/init.d/SuSEfirewall2_init status" $["TERM":"raw"] 0
Return	true
Dump	
Dump	Write - services are running
Dump	
Read	.target.dir "/projects" nil
Execute	.target.mkdir "/projects" true
Read	.target.dir "/usr" nil
Execute	.target.mkdir "/usr" true
Read	.target.dir "/pub" nil
Execute	.target.mkdir "/pub" true
Write	.etc.exports [$["allowed":["proj*.local.domain(rw)"], "mountpoint":"/projects"], $["allowed":["*.local.domain(ro)", "@trusted(rw)"], "mountpoint":"/usr"], $["allowed":["(ro,insecure,all_squash)"], "mountpoint":"/pub"]] true
Read	.init.scripts.exists "portmap" true
Read	.init.scripts.exists "portmap" true
Read	.init.scripts.exists "portmap" true
Read	.init.scripts.runlevel "portmap" $["nfsserver":$["start":["3", "5"], "stop":["3", "5"]], "portmap":$["start":["3", "5"], "stop":["3", "5"]]]
Read	.init.scripts.comment "portmap" $["nfsserver":$[], "portmap":$[]]
Read	.init.scripts.exists "nfslock" true
Read	.init.scripts.exists "nfslock" true
Read	.init.scripts.exists "nfslock" true
Read	.init.scripts.runlevel "nfslock" $["nfsserver":$["start":["3", "5"], "stop":["3", "5"]], "portmap":$["start":["3", "5"], "stop":["3", "5"]]]
Read	.init.scripts.comment "nfslock" $["nfsserver":$[], "portmap":$[]]
Execute	.target.bash_output "/sbin/insserv -d /etc/init.d/nfslock" $["exit":0, "stderr":"", "stdout":""]
Read	.init.scripts.exists "nfsserver" true
Read	.init.scripts.exists "nfsserver" true
Read	.init.scripts.exists "nfsserver" true
Read	.init.scripts.runlevel "nfsserver" $["nfsserver":$["start":["3", "5"], "stop":["3", "5"]], "portmap":$["start":["3", "5"], "stop":["3", "5"]]]
Read	.init.scripts.comment "nfsserver" $["nfsserver":$[], "portmap":$[]]
Read	.init.scripts.exists "portmap" true
Execute	.target.bash "/etc/init.d/portmap status" $["TERM":"raw"] 0
Read	.init.scripts.exists "nfsserver" true
Execute	.target.bash "/etc/init.d/nfsserver stop" $["TERM":"raw"] 0
Read	.init.scripts.exists "nfslock" true
Execute	.target.bash "/etc/init.d/nfslock restart" $["TERM":"raw"] 0
Read	.init.scripts.exists "nfsserver" true
Execute	.target.bash "/etc/init.d/nfsserver start" $["TERM":"raw"] 0
Read	.init.scripts.exists "nfsserver" true
Execute	.target.bash "/etc/init.d/nfsserver status" $["TERM":"raw"] 0
Read	.init.scripts.exists "SuSEfirewall2_init" true
Execute	.target.bash "/etc/init.d/SuSEfirewall2_init status" $["TERM":"raw"] 0
Return	true
Dump	
Dump	Read  - services are stopped
Dump	
Read	.init.scripts.exists "nfsserver" true
Read	.init.scripts.runlevel "nfsserver" $["nfsserver":$["start":[], "stop":[]], "portmap":$["start":[], "stop":[]]]
Read	.etc.exports [$["allowed":["proj*.local.domain(rw)"], "mountpoint":"/projects"], $["allowed":["*.local.domain(ro)", "@trusted(rw)"], "mountpoint":"/usr"], $["allowed":["(ro,insecure,all_squash)"], "mountpoint":"/pub"]]
Read	.init.scripts.exists "nfslock" true
Read	.init.scripts.exists "SuSEfirewall2_init" true
Read	.init.scripts.runlevel "SuSEfirewall2_init" $["nfsserver":$["start":[], "stop":[]], "portmap":$["start":[], "stop":[]]]
Read	.init.scripts.exists "SuSEfirewall2_init" true
Execute	.target.bash "/etc/init.d/SuSEfirewall2_init status" $["TERM":"raw"] 0
Return	true
Dump	
Dump	Write - services will be stopped
Dump	
Read	.target.dir "/projects" nil
Execute	.target.mkdir "/projects" true
Read	.target.dir "/usr" nil
Execute	.target.mkdir "/usr" true
Read	.target.dir "/pub" nil
Execute	.target.mkdir "/pub" true
Write	.etc.exports [$["allowed":["proj*.local.domain(rw)"], "mountpoint":"/projects"], $["allowed":["*.local.domain(ro)", "@trusted(rw)"], "mountpoint":"/usr"], $["allowed":["(ro,insecure,all_squash)"], "mountpoint":"/pub"]] true
Read	.init.scripts.exists "nfsserver" true
Execute	.target.bash "/etc/init.d/nfsserver stop" $["TERM":"raw"] 0
Read	.init.scripts.exists "nfsserver" true
Read	.init.scripts.exists "nfsserver" true
Read	.init.scripts.exists "nfsserver" true
Read	.init.scripts.runlevel "nfsserver" $["nfsserver":$["start":[], "stop":[]], "portmap":$["start":[], "stop":[]]]
Read	.init.scripts.comment "nfsserver" $["nfsserver":$[], "portmap":$[]]
Read	.init.scripts.exists "nfslock" true
Execute	.target.bash "/etc/init.d/nfslock stop" $["TERM":"raw"] 0
Read	.init.scripts.exists "nfslock" true
Read	.init.scripts.exists "nfslock" true
Read	.init.scripts.exists "nfslock" true
Read	.init.scripts.runlevel "nfslock" $["nfsserver":$["start":[], "stop":[]], "portmap":$["start":[], "stop":[]]]
Read	.init.scripts.comment "nfslock" $["nfsserver":$[], "portmap":$[]]
Read	.init.scripts.exists "SuSEfirewall2_init" true
Execute	.target.bash "/etc/init.d/SuSEfirewall2_init status" $["TERM":"raw"] 0
Return	true
Dump	
Dump	Read  - services are stopped
Dump	
Read	.init.scripts.exists "nfsserver" true
Read	.init.scripts.runlevel "nfsserver" $["nfsserver":$["start":[], "stop":[]], "portmap":$["start":[], "stop":[]]]
Read	.etc.exports [$["allowed":["proj*.local.domain(rw)"], "mountpoint":"/projects"], $["allowed":["*.local.domain(ro)", "@trusted(rw)"], "mountpoint":"/usr"], $["allowed":["(ro,insecure,all_squash)"], "mountpoint":"/pub"]]
Read	.init.scripts.exists "nfslock" true
Read	.init.scripts.exists "SuSEfirewall2_init" true
Read	.init.scripts.runlevel "SuSEfirewall2_init" $["nfsserver":$["start":[], "stop":[]], "portmap":$["start":[], "stop":[]]]
Read	.init.scripts.exists "SuSEfirewall2_init" true
Execute	.target.bash "/etc/init.d/SuSEfirewall2_init status" $["TERM":"raw"] 0
Return	true
Dump	
Dump	Write - services will be started
Dump	
Read	.target.dir "/projects" nil
Execute	.target.mkdir "/projects" true
Read	.target.dir "/usr" nil
Execute	.target.mkdir "/usr" true
Read	.target.dir "/pub" nil
Execute	.target.mkdir "/pub" true
Write	.etc.exports [$["allowed":["proj*.local.domain(rw)"], "mountpoint":"/projects"], $["allowed":["*.local.domain(ro)", "@trusted(rw)"], "mountpoint":"/usr"], $["allowed":["(ro,insecure,all_squash)"], "mountpoint":"/pub"]] true
Read	.init.scripts.exists "portmap" true
Read	.init.scripts.exists "portmap" true
Read	.init.scripts.exists "portmap" true
Read	.init.scripts.runlevel "portmap" $["nfsserver":$["start":[], "stop":[]], "portmap":$["start":[], "stop":[]]]
Read	.init.scripts.comment "portmap" $["nfsserver":$[], "portmap":$[]]
Execute	.target.bash_output "/sbin/insserv -d /etc/init.d/portmap" $["exit":0, "stderr":"", "stdout":""]
Read	.init.scripts.exists "nfslock" true
Read	.init.scripts.exists "nfslock" true
Read	.init.scripts.exists "nfslock" true
Read	.init.scripts.runlevel "nfslock" $["nfsserver":$["start":[], "stop":[]], "portmap":$["start":[], "stop":[]]]
Read	.init.scripts.comment "nfslock" $["nfsserver":$[], "portmap":$[]]
Execute	.target.bash_output "/sbin/insserv -d /etc/init.d/nfslock" $["exit":0, "stderr":"", "stdout":""]
Read	.init.scripts.exists "nfsserver" true
Read	.init.scripts.exists "nfsserver" true
Read	.init.scripts.exists "nfsserver" true
Read	.init.scripts.runlevel "nfsserver" $["nfsserver":$["start":[], "stop":[]], "portmap":$["start":[], "stop":[]]]
Read	.init.scripts.comment "nfsserver" $["nfsserver":$[], "portmap":$[]]
Execute	.target.bash_output "/sbin/insserv -d /etc/init.d/nfsserver" $["exit":0, "stderr":"", "stdout":""]
Read	.init.scripts.exists "portmap" true
Execute	.target.bash "/etc/init.d/portmap status" $["TERM":"raw"] 0
Read	.init.scripts.exists "nfsserver" true
Execute	.target.bash "/etc/init.d/nfsserver stop" $["TERM":"raw"] 0
Read	.init.scripts.exists "nfslock" true
Execute	.target.bash "/etc/init.d/nfslock restart" $["TERM":"raw"] 0
Read	.init.scripts.exists "nfsserver" true
Execute	.target.bash "/etc/init.d/nfsserver start" $["TERM":"raw"] 0
Read	.init.scripts.exists "nfsserver" true
Execute	.target.bash "/etc/init.d/nfsserver status" $["TERM":"raw"] 0
Read	.init.scripts.exists "SuSEfirewall2_init" true
Execute	.target.bash "/etc/init.d/SuSEfirewall2_init status" $["TERM":"raw"] 0
Return	true
