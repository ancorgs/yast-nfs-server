/**
 * File:
 *   nfs_server.ycp
 *
 * Module:
 *   Configuration of nfs_server
 *
 * Summary:
 *   Module for the configuration of the nfs server
 *
 * Authors:
 *   Jan Holesovsky <kendy@suse.cz>
 *   Dan Vesely <dan@suse.cz>
 *   Martin Vidner <mvidner@suse.cz>
 *
 * $Id$
 *
 * Module for the configuration of the nfs server
 */

/***
 * <h3>Configuration of the nfs_server</h3>
 */

{

    textdomain "nfs_server";

    import "NfsServer";
    // FIXME also apply to autoyast part,
    // must be able to query packages in selections
    import "Package";
    import "Wizard";
    import "Popup";
    import "Sequencer";

    include "nfs_server/ui.ycp";

    map Aliases = $[
	"begin"   : ``(BeginDialog ()),
	"exports"   : ``(ExportsDialog ()),
	];

    map Sequence = $[
	"ws_start"  : "begin",
	"begin"     : $[
	    `next   : "exports",
	    `finish : `ws_finish,
	    `abort  : `abort
	    ],
	"exports"       : $[
	    `next   : `ws_finish,
	    `abort  : `abort
	    ],
	];

    // If nfs-utils nor nfs-server is not installed, install nfs-utils.
    // TODO: require installation of alternate packages
    if (!Package::Installed ("nfs-server"))
    {
	use_star_for_anonymous = true;
	spaces_allowed = true;
	if (!Package::InstallAll (NfsServer::required_packages))
	{
	    return nil;
	}
    }

    if (! NfsServer::Read ())
    {
	// TODO:log an error?
	return nil;
    }

    Wizard::CreateDialog ();
    Wizard::SetDesktopIcon("nfs_server");

    any result = Sequencer::Run(Aliases, Sequence);

    if (result == `ws_finish)
    {
	NfsServer::Write();
    }

    return UI::CloseDialog();
}
